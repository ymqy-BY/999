t torchimport torch.nn as nnimport torchvision.transforms as transformsimport torchvisionfrom torchvision import transforms, datasetsimport os,PIL,pathlib,warningswarnings.filterwarnings("ignore")             #忽略警告信息device = torch.device("cuda" if torch.cuda.is_available() else "cpu")import os,PIL,random,pathlibdata_dir = './J3-data/'data_dir = pathlib.Path(data_dir)data_paths  = list(data_dir.glob('*'))classeNames = [str(path).split("\\")[1] for path in data_paths]train_transforms = transforms.Compose([    transforms.Resize([224, 224]),  # 将输入图片resize成统一尺寸    # transforms.RandomHorizontalFlip(), # 随机水平翻转    transforms.ToTensor(),          # 将PIL Image或numpy.ndarray转换为tensor，并归一化到[0,1]之间    transforms.Normalize(           # 标准化处理-->转换为标准正太分布（高斯分布），使模型更容易收敛        mean=[0.485, 0.456, 0.406],         std=[0.229, 0.224, 0.225])  # 其中 mean=[0.485,0.456,0.406]与std=[0.229,0.224,0.225] 从数据集中随机抽样计算得到的。])test_transform = transforms.Compose([    transforms.Resize([224, 224]),  # 将输入图片resize成统一尺寸
